#include "mainwindow.h"
#include "ui_mainwindow.h"

#define VERSION "1.0"

MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
    ui->setupUi(this);
    ui->communicationwidget->osv = ui->arena->osv;
    ui->communicationwidget->arena = ui->arena;
    ui->settingswidget->osv = ui->arena->osv;
    connect(ui->settingswidget, SIGNAL(randomizeClicked()), ui->arena, SLOT(randomize()));
    connect(ui->settingswidget, SIGNAL(resetClicked()), ui->arena, SLOT(reset()));
    connect(ui->settingswidget, SIGNAL(customClicked(int)), ui->arena, SLOT(customButtonClicked(int)));
    connect(ui->settingswidget, SIGNAL(coordinateChanged(float,bool)), ui->arena, SLOT(customCoordinateChanged(float,bool)));
    connect(ui->settingswidget, SIGNAL(sliderMoved(int)), ui->arena, SLOT(entropyChanged(int)));
    checkForUpdates();
}

MainWindow::~MainWindow()
{
    delete ui;
}

void MainWindow::checkForUpdates() {
    // Here we will check the tags in git for updates to notify the users.
    QTimer* timeout = new QTimer();
    QNetworkAccessManager manager;
    QNetworkRequest request(QUrl("http://enes100.umd.edu/simulator/"));
    QNetworkReply *response = manager.get(request);
    QEventLoop event;
    connect(timeout, SIGNAL(timeout()), &event, SLOT(quit()));
    connect(response,SIGNAL(finished()),&event,SLOT(quit()));
    timeout->start(200);
    event.exec();
    QByteArray html = response->readAll();
    int index = html.indexOf("<h1>Simulator") + 14;
    QString versionNumber = "";
    while(html[index] != '<') {
        versionNumber += html[index];
        index++;
    }
    
    
}
